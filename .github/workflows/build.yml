name: yeoboya-lunch-api CI # 워크플로우 이름

on:
  push:
    branches: [ main ] # main 브랜치에 푸시가 발생하면 작업 실행
  pull_request:
    branches: [ main ] # main 브랜치에 Pull Request가 생기면 작업 실행

jobs:
  build:

    runs-on: ubuntu-latest # 작업이 실행될 운영체제를 선택합니다. 여기서는 가장 최신의 ubuntu를 사용합니다.

    steps:
      - uses: actions/checkout@v2 # 저장소를 가져오는 작업
      - name: Set up JDK 11 # JDK 11을 준비하는 작업
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew # gradlew에 대한 실행 권한을 부여하는 작업
        run: chmod +x gradlew

      - name: Cache Gradle packages # Gradle 패키지를 캐싱하는 작업
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build with Gradle # Gradle로 빌드하는 작업
        run: ./gradlew clean build -x test -Dspring.profiles.active=prod

      - name: Check Secrets
        run: |
          echo "Length of AWS Access Key ID: ${#{{ secrets.AWS_ACCESS_KEY_ID }}}"
          echo "Length of AWS Secret Access Key: ${#{{ secrets.AWS_SECRET_ACCESS_KEY }}}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Sync output files to S3
        uses: aws-actions/amazon-s3-sync@v0.5 # 이 부분에서 가장 최신 또는 안정적인 릴리스 버전을 확인 후 사용
        with:
          source: build/libs/
          bucket: yeoboya-lunch-s3
          key-prefix: "yeoboya-lunch-api/" # S3 내에서의 폴더 경로를 지정

