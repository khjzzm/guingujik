name: yeoboya-lunch-api CI # 워크플로우의 이름을 지정합니다.

on:
  push:
    branches: [ main ] # main 브랜치에 푸시가 발생할 경우 워크플로우를 시작합니다.
  pull_request:
    branches: [ main ] # main 브랜치에 PR(pull request)이 발생할 경우 워크플로우를 시작합니다.

jobs:
  build:
    runs-on: ubuntu-latest # 작업이 실행될 운영체제입니다. 가장 최신의 ubuntu를 사용합니다.

    steps:
      - uses: actions/checkout@v2 # 저장소를 체크아웃합니다. 이 단계에서 코드가 Runner에 복사됩니다.

      - name: Set up JDK 11 # JDK 11을 설치합니다.
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew # gradlew에 실행 권한을 부여합니다.
        run: chmod +x gradlew

      - name: Cache Gradle packages # Gradle 패키지를 캐시합니다. 이를 통해 다시 실행할 때 빌드 속도를 줄일 수 있습니다.
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build with Gradle # Gradle로 빌드를 실행합니다.
        run: ./gradlew clean build -x test -Dspring.profiles.active=prod # 여기서 prod 프로파일을 사용하여 빌드를 실행합니다.

      - name: Configure AWS credentials # AWS 자격 증명을 설정합니다.
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Convert JAR to ZIP
        run: jar -cMf yeoboya-lunch-api.zip -C /home/runner/work/yeoboya-lunch-api/yeoboya-lunch-api/build/libs/ yeoboya-lunch-api-0.0.1-SNAPSHOT.jar

      - name: Sync output files to S3
        run: aws s3 cp yeoboya-lunch-api.zip s3://yeoboya-lunch-s3/yeoboya-lunch-api.zip

      - name: AWS EC2에 AWS CodeDeploy를 사용하여 배포
        run: |
          aws deploy create-deployment \ # AWS CodeDeploy를 사용하여 신규 배포 생성
          --application-name yeoboya-lunch-code-deploy \ # AWS CodeDeploy에 등록된 애플리케이션 이름 지정
          --deployment-config-name CodeDeployDefault.AllAtOnce \ # 배포 설정 이름 지정 (여기서는 모든 인스턴스에 동시 배포)
          --deployment-group-name yeoboya-lunch-code-deploy-group \ # 배포 그룹 이름 지정
          --file-exists-behavior OVERWRITE \ # 대상 위치에 이미 파일이 있을 경우 덮어쓰기 옵션
          --s3-location bucket=yeoboya-lunch-s3,bundleType=zip,key=yeoboya-lunch-api.zip \ # S3 버킷과 버킷 내의 파일 경로 지정
          --region ap-northeast-2 \ # 사용할 AWS 리전 지정
